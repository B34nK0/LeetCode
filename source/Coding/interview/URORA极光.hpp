/*
c++11 特性有哪些

1、左值与右值
左值是指表达式结束后依然存在的持久对象
右值是指表达式结束时就不再存在的临时对象

2、通过右值方式得到函数里的变量
a、函数返回的临时对象是右值，可以通过右值引用（T &&）的方式来延长临时右值的生命周期
A GetA() {
	return A();
}

A&& a = GetA();
、
b、通过常量左值引用（接受左值、右值、常量左值和常量右值），必须是常量左值引用
const A& a = GetA();


3、move之后对象在哪里
moove方法将对象的状态或者所有权从给一个对象转移到另一个对象，只是转移，并没有内存拷贝，可理解为将一个左值强制转换为一个右值引用

move跟forward
forward要解决的是在函数模板中，完全按照模板的参数的类型（保持参数的左值、右值特征），将参数传递给函数模板中调用的另外一个函数。

4、unique_ptr 与 auto_ptr的区别
unique_ptr是独占型只能指针，不允许其他的智能指针共享其内部的指针，不允许赋值，但支持move转移所有权
虽然同一时间只有一个auto_ptr拥有对象的指针，但其允许复制，会导致另一个auto_ptr指向空指针，造成指针访问异常

5、shared_ptr的实现机制
使用引用计数，每一个shared_ptr拷贝都指向相同的内存，最后一个shared_ptr析构时，内存才会释放

6、shared_ptr循环引用
把循环引用的任何一个成员变量改为weak_ptr

7、虚函数表相关信息
派生类在编译时，会生成一个虚函数表指针和虚函数表，虚函数表记录派生类重载的函数实现地址

内存布局的哪个区
对象指针 A* obj存放在栈上， 指针指向堆上的实例A内存，A内存里包含了虚表指针，指针指向只读数据段上的虚函数表，虚函数表记录的是派生类重载实现的函数指针，函数指针指向代码段上的虚函数代码

A重写B类的虚函数，内存有什么变化
A实例内存有虚表指针

进程跟线程之间的区别

什么场景下使用进程、线程


epoll跟IOCP的区别

阻塞异步分别是在哪些阶段

epoll用到的是水平触发还是边缘触发

水平触发跟边缘触发的优缺点

accept，socket处于什么状态，在半链接队列还是全链接队列里

环形缓冲区

无锁是怎么实现

cas为什么能实现无锁

cas aba问题

内存模型


*/
/*
mysql

分表

分库分表的方案

聚簇索引跟非聚簇索引的实现


*/

/*
redis 使用了哪些数据类型及场景

redis是独立数据，还是mysql的缓存

redis如何做到数据一致性，mysql更新完成程序崩溃

redis淘汰策略
*/

/*
service mesh

注册中心机制

远程调用，服务不可用

服务不可用是否实现高可用（负载转发）

负载均衡策略有哪些


*/